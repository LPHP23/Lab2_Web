/** @jsx createElement */
import { createElement, useState } from './jsx-runtime';
import { Card, Button } from './component';
import { Chart, ChartType } from './chart';
import { DataService, DataPoint } from './data-service';

const dataService = new DataService();

export const Dashboard = () => {
Â  const [getChartType, setChartType] = useState<ChartType>('bar');
Â  const [getData, setData] = useState<DataPoint[]>(dataService.generateData());
Â  const [getCategory, setCategory] = useState<string>('all');
Â Â 
Â  const refreshData = () => {
Â  Â  setData(dataService.generateData());
Â  };
Â Â 
Â  const categories = ['all', 'sales', 'revenue', 'users', 'growth'];
Â Â 
  // TÃ­nh toÃ¡n dá»¯ liá»‡u
Â  const filteredData = getCategory() === 'all'Â 
Â  Â  ? getData()Â 
Â  Â  : getData().filter(d => d.category === getCategory());
      
  // Sá»¬A Lá»–I 3: ThÃªm kiá»ƒm tra
  const dataLength = filteredData.length;
  const average = dataLength > 0 ? Math.round(filteredData.reduce((sum, d) => sum + d.value, 0) / dataLength) : 0;
  const maxValue = dataLength > 0 ? Math.max(...filteredData.map(d => d.value)) : 0;
  const minValue = dataLength > 0 ? Math.min(...filteredData.map(d => d.value)) : 0;

Â  return (
Â  Â  <div className="dashboard">
Â  Â  Â  <div className="dashboard-header">
Â  Â  Â  Â  <h1>ðŸ“Š Analytics Dashboard</h1>
Â  Â  Â  Â  <p className="subtitle">Real-time data visualization</p>
Â  Â  Â  </div>
Â  Â  Â Â 
Â  Â  Â  <div className="dashboard-controls">
Â  Â  Â  Â  <Card title="Chart Type" className="control-card">
Â  Â  Â  Â  Â  <div className="btn-group">
Â  Â  Â  Â  Â  Â  <ButtonÂ 
Â  Â  Â  Â  Â  Â  Â  className={getChartType() === 'bar' ? 'active' : ''}
Â  Â  Â  Â  Â  Â  Â  onClick={() => setChartType('bar')}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  ðŸ“Š Bar
Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  <ButtonÂ 
Â  Â  Â  Â  Â  Â  Â  className={getChartType() === 'line' ? 'active' : ''}
Â  Â  Â  Â  Â  Â  Â  onClick={() => setChartType('line')}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  ðŸ“ˆ Line
Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  <ButtonÂ 
Â  Â  Â  Â  Â  Â  Â  className={getChartType() === 'pie' ? 'active' : ''}
Â  Â  Â  Â  Â  Â  Â  onClick={() => setChartType('pie')}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  ðŸ¥§ Pie
Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </Card>
Â  Â  Â  Â Â 
Â  Â  Â  Â  <Card title="Category Filter" className="control-card">
Â  Â  Â  Â  Â  <selectÂ 
Â  Â  Â  Â  Â  Â  className="category-select"
Â  Â  Â  Â  Â  Â  value={getCategory()}
            // Sá»¬A Lá»–I 2: DÃ¹ng (e: Event)
Â  Â  Â  Â  Â  Â  onChange={(e: Event) => setCategory((e.target as HTMLSelectElement).value)}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  {categories.map(cat => (
Â  Â  Â  Â  Â  Â  Â  <option key={cat} value={cat}>
Â  Â  Â  Â  Â  Â  Â  Â  {cat.charAt(0).toUpperCase() + cat.slice(1)}
Â  Â  Â  Â  Â  Â  Â  </option>
Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  </Card>
Â  Â  Â  Â Â 
Â  Â  Â  Â  <Card title="Actions" className="control-card">
Â  Â  Â  Â  Â  <Button onClick={refreshData} className="btn-primary">
Â  Â  Â  Â  Â  Â  ðŸ”„ Refresh Data
Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  </Card>
Â  Â  Â  </div>
Â  Â  Â Â 
Â  Â  Â  <div className="dashboard-main">
Â  Â  Â  Â  <Card title={`${getChartType().charAt(0).toUpperCase() + getChartType().slice(1)} Chart - ${getCategory() === 'all' ? 'All Categories' : getCategory()}`} className="chart-card">
Â  Â  Â  Â  Â  <ChartÂ 
Â  Â  Â  Â  Â  Â  data={filteredData}
Â  Â  Â  Â  Â  Â  type={getChartType()}
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </Card>
Â  Â  Â  Â Â 
Â  Â  Â  Â  <div className="stats-grid">
Â  Â  Â  Â  Â  <Card className="stat-card">
Â  Â  Â  Â  Â  Â  <div className="stat-value">{dataLength}</div>
Â  Â  Â  Â  Â  Â  <div className="stat-label">Data Points</div>
Â  Â  Â  Â  Â  </Card>
Â  Â  Â  Â  Â  <Card className="stat-card">
Â  Â  Â  Â  Â  Â  <div className="stat-value">{average}</div>
Â  Â  Â  Â  Â  Â  <div className="stat-label">Average</div>
Â  Â  Â  Â  Â  </Card>
Â  Â  Â  Â  Â  <Card className="stat-card">
Â  Â  Â  Â  Â  Â  <div className="stat-value">{maxValue}</div>
Â  Â  Â  Â  Â  Â  <div className="stat-label">Max Value</div>
Â  Â  Â  Â  Â  </Card>
Â  Â  Â  Â  Â  <Card className="stat-card">
Â  Â  Â  Â  Â  Â  <div className="stat-value">{minValue}</div>
Â  Â  Â  Â  Â  Â  <div className="stat-label">Min Value</div>
Â  Â  Â  Â  Â  </Card>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};
